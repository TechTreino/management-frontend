#!/usr/bin/env node
"use strict";

/*
 * Dependencies
 */
const server = require("../dist/server");
const debug = require("debug")("express:server");
const http = require("http");
const mongoose = require("mongoose");

/*
 * Connect to the database
 */
mongoose.connect("mongodb://localhost/academia-digital");

/*
 * Create the HTTP Server
 */
const port = normalizePort(process.env.PORT || 3000);
const app = server.Server.bootstrap().app;
      app.set("port", port);
const httpServer = http.createServer(app);
      httpServer.listen(port);
      httpServer.on("error", onError);
      httpServer.on("listening", onListening);

/*
 * Utilitary functions
 */
function normalizePort(port)
{
	port = parseInt(port);

	if(isNaN(port))
		throw new Error("The port number must to be a valid number");

	if(port < 1)
		throw new Error("The port number can't be negative");

	return port;
}

function onError(error)
{
	if(error.syscall !== "listen")
		throw error;

	if(error.code === "EACCESS")
	{
		console.error("Some privileges are required by this script");
		process.exit(1);
	}

	if(error.code === "EADDRINUSE")
	{
		console.error("Given port is already being used by another process");
		process.exit(1);
	}

	throw error;
}

function onListening()
{
	var address = httpServer.address();
	debug("Listening on port " + port);
}
